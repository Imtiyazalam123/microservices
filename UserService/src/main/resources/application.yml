server:
  port: 9090
rating-base:
  url: "http://localhost:9595"
spring:
  application:
    name: USER-SERVICE
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: Imt7368@
    driver-class-name: com.mysql.cj.jdbc.Driver
    
  jpa:
    hibernate: 
     ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
#We are using spring active profiles as default
#  profiles:
#    active: dev
#  Fetching configuration form config server service.
  config:
    import: configserver:http://localhost:8181
#    spring.config.import.optional.configserver= http://localhost:8181
#
#We don't require erureka client registry configuration because we are using getting this common configuration from config-server microservice to repeated configuration for all microservices.
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#      defaultZone: http://localhost:8761/eureka

#actuator configuration for health monitoring.
management:
  endpoints:
    web:
      exposure:
        include: health
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true

  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      externalRatingServiceBreaker:
        registerHealthIndicator: true
        eventConsumerBufferSize: 10
        failureRateThreshold: 50
        minimumNumberOfCalls: 5
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 8
        slidingWindowType: COUNT_BASED

#  retry:
#    instances:
#      externalRatingServiceRetry:
#        maxAttempts: 3
#        waitDuration: 5s

#  ratelimiter:
#    instances:
#      getUserRateLimiter:
#        limitRefreshPeriod: 4s
#        limitForPeriod: 2
#        timeoutDuration: 2s

